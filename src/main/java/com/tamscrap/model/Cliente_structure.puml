@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.tamscrap.model.Cliente",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_574075855 { 
   	label=tamscrap
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_908299052 { 
   	label=model
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Carrito1690160953[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Carrito</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   imagenUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombreCliente: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   productos: Set&lt;Producto&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProducto(producto: Producto)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeProducto(producto: Producto)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Cliente1690160953[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Cliente</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   authorities: List&lt;UserAuthority&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   carrito: Carrito [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   email: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   favoritos: List&lt;Producto&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombre: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pedidos: Set&lt;Pedido&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   username: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFavorito(producto: Producto)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPedido(pedido: Pedido)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeFavorito(producto: Producto)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removePedido(pedido: Pedido)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Pedido1690160953[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Pedido</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cliente: Cliente [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fechaCreacion: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   precio: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   productos: Set&lt;ProductosPedidos&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProducto(b: Producto, cantidad: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addProducto2(b: Producto, cantidad: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ calcularPrecio()</TD></TR>
<TR><TD ALIGN="LEFT" >+ imprimirProductos(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeProducto(b: Producto)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Producto1690160953[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Producto</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   carrito: Carrito [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   descuento: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   favorito: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   imagen: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lettering: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombre: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   oferta: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pedidos: Set&lt;ProductosPedidos&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   precio: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   precioOriginal: Double [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scrapbooking: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ desactivarOferta()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProductoPedidoId1690160953[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProductoPedidoId</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   pedidoId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   productoId: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProductosPedidos1690160953[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProductosPedidos</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cantidad: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: ProductoPedidoId [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombre: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pedido: Pedido [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   producto: Producto [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Carrito1690160953 -> Producto1690160953[label="productos
[0..1]"];
Cliente1690160953 -> Carrito1690160953[label="carrito
[0..1]"];
Cliente1690160953 -> Pedido1690160953[label="pedidos
[0..1]"];
Cliente1690160953 -> Producto1690160953[label="favoritos
[0..1]"];
Pedido1690160953 -> Cliente1690160953[label="cliente
[0..1]"];
Pedido1690160953 -> ProductosPedidos1690160953[label="productos
[0..1]"];
Producto1690160953 -> Carrito1690160953[label="carrito
[0..1]"];
Producto1690160953 -> ProductosPedidos1690160953[label="pedidos
[0..1]"];
ProductosPedidos1690160953 -> Pedido1690160953[label="pedido
[0..1]"];
ProductosPedidos1690160953 -> Producto1690160953[label="producto
[0..1]"];
ProductosPedidos1690160953 -> ProductoPedidoId1690160953[label="id
[0..1]"];
    
}
@enduml